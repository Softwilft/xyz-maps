name: Build & Test

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - '*'

env:
    yarn-network-timeout: 1000000

jobs:
    build:
        name: Test ${{ matrix.browser }} (${{ matrix.os }})
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                node-version: [ 12.x ]
                browser: [ ChromeHeadless ]
                os: [ ubuntu-latest ]

        steps:
            -   uses: actions/checkout@v2
            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"
            -   uses: actions/cache@v2
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v1
                with:
                    node-version: ${{ matrix.node-version }}
                env:
                    NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            -   name: Install dependencies
                run: yarn install --network-timeout ${{ env.yarn-network-timeout }}
            -   name: Build release package
                run: yarn run build-release
            -   name: Run tests
                run: yarn test --browser ${{ matrix.browser }}
            -   name: Get npm dist-tag
                id: get-dist-tag
                run: |
                    distTag=$(jq -r '.version | match(".*-([^.]*)").captures[0].string' package.json)
                    echo "::set-output name=dist-tag::${distTag:-latest}"
            -   name: npm publish
                if: matrix.os == 'ubuntu-latest'
                uses: pascalgn/npm-publish-action@1.3.6
                with:
                    tag_name: "v%s"
                    tag_message: "v%s"
                    commit_pattern: "^Release (\\S+)"
                    workspace: "."
                    publish_command: "npx lerna"
                    publish_args: "publish from-package --no-git-tag-version --yes --dist-tag ${{ steps.get-dist-tag.outputs.dist-tag }}"
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
